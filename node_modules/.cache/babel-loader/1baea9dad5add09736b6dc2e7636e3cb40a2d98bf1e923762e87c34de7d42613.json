{"ast":null,"code":"var _jsxFileName = \"/Users/arun/Documents/Harry_react/my-app/src/App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from './components/Alert';\n\n// import About from \"./components/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {});\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.background = 'grey';\n      showAlert(\"Darkmode has enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.background = 'white';\n      showAlert(\"Light mode has enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Google\",\n      aboutText: \"AboutUs\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Text converter\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ZI4CJvDB/5AqSfC56M12vAUheEc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","background","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["/Users/arun/Documents/Harry_react/my-app/src/App.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React,{useState} from 'react'\n\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from './components/Alert';\n\n// import About from \"./components/About\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n const [alert,setAlert] = useState(null);\n\n const showAlert=(message,type)=>{\n\n  setAlert({\n\n    msg:message,\n    type:type\n\n  })\n  setTimeout(() => {\n    \n  }, );\n\n }\n\n\n\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n    setMode('dark');\n    document.body.style.background='grey';\n    showAlert(\"Darkmode has enabled\" , \"success\");\n    \n    }\n    else{\n      setMode('light');\n      document.body.style.background='white';\n    showAlert(\"Light mode has enabled\" , \"success\");\n\n    \n    }\n  }\n\n\n  return (\n    <>\n    \n      <Navbar title=\"Google\" aboutText=\"AboutUs\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading=\"Text converter\" mode={mode}/>\n\n        {/* <About /> */}\n\n      </div>\n\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAGpC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAE1C,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMc,SAAS,GAACA,CAACC,OAAO,EAACC,IAAI,KAAG;IAE/BH,QAAQ,CAAC;MAEPI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IAEP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM,CAEjB,CAAG,CAAC;EAEL,CAAC;EAKA,MAAMC,UAAU,GAACA,CAAA,KAAI;IACnB,IAAGT,IAAI,KAAG,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAC,MAAM;MACrCT,SAAS,CAAC,sBAAsB,EAAG,SAAS,CAAC;IAE7C,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAC,OAAO;MACxCT,SAAS,CAAC,wBAAwB,EAAG,SAAS,CAAC;IAG/C;EACF,CAAC;EAGD,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBAEEnB,OAAA,CAACJ,MAAM;MAACwB,KAAK,EAAC,QAAQ;MAACC,SAAS,EAAC,SAAS;MAAChB,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjFzB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtBzB,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC7BnB,OAAA,CAACH,QAAQ;QAACY,SAAS,EAAEA,SAAU;QAACkB,OAAO,EAAC,gBAAgB;QAACtB,IAAI,EAAEA;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAInE,CAAC;EAAA,eAEN,CAAC;AAEP;AAACrB,EAAA,CAtDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
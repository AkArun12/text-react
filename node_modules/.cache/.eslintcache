[{"/Users/arun/Documents/Harry_react/textutils/src/index.js":"1","/Users/arun/Documents/Harry_react/textutils/src/reportWebVitals.js":"2","/Users/arun/Documents/Harry_react/textutils/src/App.js":"3","/Users/arun/Documents/Harry_react/textutils/src/components/TextForm.js":"4","/Users/arun/Documents/Harry_react/textutils/src/components/Navbar.js":"5","/Users/arun/Documents/Harry_react/textutils/src/components/Alert.js":"6"},{"size":535,"mtime":1692326258262,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1692326256262,"results":"9","hashOfConfig":"8"},{"size":1728,"mtime":1692433364670,"results":"10","hashOfConfig":"8"},{"size":2483,"mtime":1692417048817,"results":"11","hashOfConfig":"8"},{"size":2548,"mtime":1692431632910,"results":"12","hashOfConfig":"8"},{"size":415,"mtime":1692417165565,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qptyu7",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/arun/Documents/Harry_react/textutils/src/index.js",[],[],"/Users/arun/Documents/Harry_react/textutils/src/reportWebVitals.js",[],[],"/Users/arun/Documents/Harry_react/textutils/src/App.js",[],[],"/Users/arun/Documents/Harry_react/textutils/src/components/TextForm.js",[],[],"/Users/arun/Documents/Harry_react/textutils/src/components/Navbar.js",["33","34"],[],"import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar  navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n            {/* <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/about\">\n                {props.aboutText}\n              </a>\n            </li> */}\n          </ul>\n          {/* <form className=\"d-flex\" role=\"search\">\n                        <input\n                            className=\"form-control me-2\"\n                            type=\"search\"\n                            placeholder=\"Search\"\n                            aria-label=\"Search\"\n\n                           \n                        />\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                            Search\n                        </button>\n                    </form> */}\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n              onClick={props.toggleMode}\n            />\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n             Enable Dark mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Navbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  aboutText: PropTypes.string.isRequired,\n};\n\nNavbar.defaultProps = {\n  title: \"set title here\",\n  aboutText: \"About text here111\",\n};\n","/Users/arun/Documents/Harry_react/textutils/src/components/Alert.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":12,"column":9,"nodeType":"37","endLine":12,"endColumn":46},{"ruleId":"35","severity":1,"message":"36","line":29,"column":15,"nodeType":"37","endLine":29,"endColumn":75},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]